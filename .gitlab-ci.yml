# This file is a template, and might need editing before it works on your project.

# Build JAVA applications using Apache Maven (http://maven.apache.org)
# For docker image tags see https://hub.docker.com/_/maven/
#
# For general lifecycle information see https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html

# This template will build and test your projects
# * Caches downloaded dependencies and plugins between invocation.
# * Verify but don't deploy merge requests.
# * Deploy built artifacts from master branch only.

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# This template uses jdk11 for verifying and deploying images
image: maven:3.6.1-jdk-11  # Maven 3.6.2 will currently NOT WORK!

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .m2/repository

stages:
  - validate
  - test
  - package_repo

default:
  before_script:
    - cd TempMavenTychoSnapshotWorkaround
    - mvn $MAVEN_CLI_OPTS clean # This is only temporary to resolve TYCHO 1.5.0-SNAPSHOT for the main build
    - cd ..

validate:
  stage: validate
  script:
    - mvn $MAVEN_CLI_OPTS clean validate

test:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS verify
  artifacts:
    when: on_failure
    expire_in: 1 week
    reports:
      junit: tests/*/target/surefire-reports/TEST-*.xml

package_repo:
  stage: package_repo
  when: manual
  script: 
    - mvn $MAVEN_CLI_OPTS verify
  artifacts:
    paths: releng/net.mograsim.plugin.updatesite/target/*.zip
